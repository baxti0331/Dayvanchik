from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
import os

TOKEN = os.getenv("BOT_TOKEN")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üîç –ù–∞—á–∞—Ç—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ", callback_data="start_match")],
        [InlineKeyboardButton("üìñ –ü—Ä–∞–≤–∏–ª–∞", url="https://example.com/rules")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    welcome_text = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤ ‚ù§Ô∏è\n\n"
        "üìå –ó–∞–ø–æ–ª–Ω–∏ –∞–Ω–∫–µ—Ç—É, –æ—Ü–µ–Ω–∏–≤–∞–π –¥—Ä—É–≥–∏—Ö –∏ –Ω–∞—Ö–æ–¥–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è!\n"
        "–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å?"
    )

    await update.message.reply_text(welcome_text, reply_markup=reply_markup)

if __name__ == "__main__":
    from telegram.ext import CallbackQueryHandler

    async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
        query = update.callback_query
        await query.answer()

        if query.data == "start_match":
            await query.edit_message_text("üöÄ –û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π –Ω–∞—á–Ω—ë–º –ø–æ–¥–±–æ—Ä üòä")

    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))
    app.run_polling()